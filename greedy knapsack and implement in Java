import java.util.Arrays;
import java.util.Comparator;

class Item {
    int value;
    int weight;
    double ratio;

    Item(int value, int weight) {
        this.value = value;
        this.weight = weight;
        this.ratio = (double) value / weight;
    }
}

public class greedy_knapsack {
    public static void main(String[] args) {
        int n = 3; 
        int m = 20;
        int[] values = {25, 24, 15};
        int[] weights = {18, 15, 10};

        Item[] items = new Item[n];
        for (int i = 0; i < n; i++) {
            items[i] = new Item(values[i], weights[i]);
        }

        Arrays.sort(items, Comparator.comparingDouble(item -> -item.ratio));

        double maxValue = 0;
        int remainingCapacity = m;

        for (Item item : items) {
            if (remainingCapacity == 0) break;
            if (item.weight <= remainingCapacity) {
                maxValue += item.value;
                remainingCapacity -= item.weight;
            } else {
              
                maxValue += item.ratio * remainingCapacity;
                break;
            }
        }

        System.out.printf("Maximum value in the knapsack: %.2f\n", maxValue);
    }
}
